# -*- coding: UTF-8 -*-
import numpy
import json
import os.path
import sys
from sklearn.feature_extraction.text import CountVectorizer # countvectoriser creats tokens for each data set
import numpy.linalg as LA #importing the linear algebra module


dict_probability = {

    'X':{'Help! What can you do? Who are you? What should I write/type?' : 'Hi, my name is @prof. Ask me anything. Here are a few options:<br>How should I start a test?<br>I am confused with a test question<br>My test analysis is not clear<br>I am struggling with a concept',

'How should I start a test?' : 'Click on "Home" on the left pane to start a new test. <br> Click on "Tests" on the left pane to continue current test.',

'I am confused with a test question' : 'Please enter the question number to get solution.',

'My test analysis is not clear' : 'Please enter test code.<br>â€¦<br>Which part were you not able to understand?',

'I am struggling with a concept' : 'Please mention the concept.',

'Hi Hey Hello' : 'Hey, how are you doing? Let us learn something new today!',

'Where should I enter my answer?' : 'Please enter your answer in the box provided below the question.',

'What is an event?' : 'An event is a set of outcomes of an experiment. Probability is assigned to an event.',

'What is a set?' : 'A set is a group of objects.',

'What is an outcome?' : 'An outcome is the way a thing turns out.<br>A coin showing "heads" is an outcome of flipping the coin.',

'What is an experiment?' : 'An experiment is a procedure that can be repeated again and again. <br>But it will have the same set of possible outcomes.',

'What is an impossible event?' : 'An event which has 0% chance of happening is an impossible event.',

'What is the probability of an impossible event?' : 'The probability of an impossible event is 0.',

'What is a certain event?' : 'An event which has 100% chance of happening is a certain event.',

'What is the probability of a certain event?' : 'The probability of a certain event is 1.',

'What is probability?' : 'Probability is the extent to which an event is likely to occur.',

'What is the number of trials?' : 'The number of trials is the total number of times the experiment is repeated.',

'What is the frequency of an outcome?' : 'The frequency of a particular outcome is the number of times that this outcome is observed in an experiment.',

'What is the relative frequency of an outcome?' : 'Relative frequency = <br>Frequency of a particular outcome / <br>Total number of trials of the experiment',

'What is a sample space?' : 'A sample space is the set of all possible outcomes of an experiment. <br>It is also referred to as the universal set.',

'What is a universal set?' : 'A universal set is the set of all possible outcomes of an experiment. <br>It is also referred to as the sample space.',

'What is a list?' : 'A set of outcomes from an event are recorded as a list. <br>For example {Heads, Tails} is the list of outcomes from a coin toss.',

'What is a grid?' : 'Image + If an experiment involves more than one operation, a grid is used.',

'What is a tree diagram?' : 'Image + Tree diagrams are used when more than two operations / events are involved.',

'What is a table of outcomes?' : 'Image + Tables of outcomes are tables which compare two categorical variables.',

'What is a venn diagram?' : 'Image'},


    '0': {'What is the formula for probability?' : 'Probability = <br>Favourable cases / <br>Whole number of cases possible',

'What does "random" mean?' : 'A random number is a number generated by an unpredictable process.',

'Hint' : 'We want to select any of the four red balls - out of six balls in the box.',

'Solution' : 'Probability = <br>Favourable cases / Whole number of cases possible = <br>4 red balls / 6 total balls = <br>0.67',

'Key concepts being tested' : 'Theoretical probability'},


    '1': {'What is the formula for probability?' : 'Probability = <br>Favourable cases / <br>Whole number of cases possible',

'What does "random" mean?' : 'A random number is a number generated by an unpredictable process.',

'Hint' : 'The first ball selected was red. It is selected and removed. Now we need to select one red ball from among 3 red balls and 2 yellow balls.',

'Solution' : 'Probability = <br>Favourable cases / Whole number of cases possible = <br>3 red balls / 5 total balls = <br>0.6',

'Key concepts being tested' : 'Theoretical probability'},


    '2': {'What is the formula for probability?' : 'Probability = <br>Favourable cases / <br>Whole number of cases possible',

'What does "random" mean?' : 'A random number is a number generated by an unpredictable process.',

'Key concepts being tested' : 'Theoretical probability <br>Dependent events <br>Sampling without replacement',

'What are dependent events?' : 'If one event happening affects the occurance of another event, <br>then the two events are dependent.',

'What is the formula for probability related to dependent events?' : 'P(A then B) = <br>P(A) X P(B given that A has occurred)',

'What are independent events?' : 'If one event happening does not affect the occurance of another event, <br>then the two events are independent.',

'What is the formula for probability related to independent events?' : 'P(A and B) = P(A) X P(B)',

'What is sampling without replacement?' : 'Say, you have a box with balls in it. <br>You draw one ball.<br> Then you draw another ball without putting the first ball back in the box. <br>That is sampling without replacement.',

'What is sampling with replacement?' : 'Say, you have a box with balls in it. <br>You draw one ball. <br>Then you draw another ball after putting the first ball back in the box. <br>That is sampling with replacement.',

'Hint' : 'Selecting the first ball and then the second ball - these are dependent events',

'Another hint' : 'Formula for probability of dependent events: <br>P(A then B) = <br>P(A) X P(B given that A has occurred)',

'Yet another hint' : 'The second ball is selected from among 3 reds and 2 yellows.',

'Solution' : 'P (both selected are red) = <br>P(first is red) X P(second is red given first is red) = <br>4/6 X 3/5 = <br>2/5 = <br>0.4'},

}


def model(train_dataset,new_data):

    new = [new_data]
    ques_list = list(train_dataset.keys())
    vectorizer, trainVectorizerArray = train_func(ques_list)
    new_test = vectorizer.transform(new).toarray()  # creating a token for the new input data
    cx = lambda a, b: round(numpy.inner(a, b) / (LA.norm(a) * LA.norm(b)), 3)

    for testV in new_test:  # selecting the new token that was created for the input question
        cos = 0.0
        ans = ''
        for n, vector in enumerate(trainVectorizerArray):  # selecting the first token
            cosine = cx(vector, testV)  # finding the cosine similarity between the selected token and the new token

            if cosine > cos:
                cos = cosine

                a = ques_list[n]
                ans = train_dataset[a]
        if ans == '':
            return ('Sorry! I couldn\'t understand that. Please be more specific.')
        else:
            return(ans)

def train_func(train):
    stopWords = ['the', 'is', 'are', 'were', 'a', 'an', 'was', 'has', 'had', 'have','to','do','of','on','my','any','be','by'] #the words that should be ignored by countvectoriser
    vectorizer = CountVectorizer(stop_words=stopWords)  # adding the words list to countvectoriser
    train_set = train # creating the training set
    trainVectorizerArray = vectorizer.fit_transform(train_set).toarray()  # creating tokens froms the trainng set, This is a 2D array
    return vectorizer,trainVectorizerArray

def main_bot(question_id, user_query):                  # question_id - string, user_query
    question_dict = dict(dict_probability['X'].items() + dict_probability[question_id].items())
    answer = model(question_dict, user_query)
    return (answer)

